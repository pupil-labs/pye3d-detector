# This is a basic workflow that is manually triggered

name: Build OpenCV

env:
  opencv-download-url-default: 'https://github.com/opencv/opencv/archive/4.2.0.zip'
# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  push:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      opencv-download-url:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'OpenCV Download URL'
        # Default value if no value is explicitly provided
        default: ${{ opencv-download-url-default }}
        # Input has to be provided for the workflow to run
        required: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - name: Define download URL (Manual Trigger)
      if: github.event.inputs.opencv-download-url
      env:
        opencv-download-url: github.event.inputs.opencv-download-url
    - name: Define download URL (Manual Trigger)
      if: ${{ !github.event.inputs.opencv-download-url }}
      env:
        opencv-download-url: ${{ opencv-download-url-default }}
    - name: Cache OpenCV source code download
      id: opencv-source-cache
      uses: actions/cache@v2.1.3
      with:
        # A list of files, directories, and wildcard patterns to cache and restore
        path: opencv.zip
        # An explicit key for restoring and saving the cache
        key: opencv-source-cache-${{ env.opencv-download-url }}
    - name: Download on Unix
      if: steps.opencv-source-cache.outputs.cache-hit != 'true' && !contains(matrix.os, 'windows')
      run: wget -q -O opencv.zip ${{ env.opencv-download-url }}
    - name: Download on Windows
      if: steps.opencv-source-cache.outputs.cache-hit != 'true' && contains(matrix.os, 'windows')
      run: Invoke-WebRequest ${{ env.opencv-download-url }} -OutFile opencv.zip
